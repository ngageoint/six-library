import os
import subprocess
import os.path
from waflib import Options

build = options = distclean = lambda x: None

def options(opt):
    opt.add_option('--with-curl-home', action='store', dest='curl_home',
            help='Specify location of Curl SDK')

def configure(conf):
    conf.env['HAVE_CURL'] = False

    if Options.options.curl_home: 
        # In the event that curl cannot be found with
        # the method below, add an option to specify its path
        print("Used the new option!")
        curlPath = os.path.expanduser(Options.options.curl_home)
        libPath = os.path.join(curlPath, 'lib')
        incPath = os.path.join(curlPath, 'include')
        if conf.check(lib='libcurl',
                    uselib_store='CURL', 
                    libpath=[libPath],
                    includes=[incPath]) :
            conf.undefine('HAVE_CURL_GLOBAL_INIT')
            conf.env['HAVE_CURL'] = True     
    elif conf.check(uselib_store='CURL',
                  lib='curl',
                  header_name='curl/curl.h',
                  function_name='curl_global_init',
                  msg='Checking for CURL',
                  mandatory=False):
        conf.undefine('HAVE_CURL_GLOBAL_INIT')
        conf.env['HAVE_CURL'] = True