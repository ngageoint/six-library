/* =========================================================================
 * This file is part of sys-c++
 * =========================================================================
 *
 * (C) Copyright 2021, Maxar Technologies, Inc.
 *
 * sys-c++ is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this program; If not, http://www.gnu.org/licenses/.
 *
 */
#ifndef CODA_OSS_std_bit_INCLUDED_
#define CODA_OSS_std_bit_INCLUDED_
#pragma once

// Make it (too?) easy for clients to get our various std:: implementations

#include "sys/Bit.h"
static_assert(CODA_OSS_sys_Endian >= 201907L, "missing sys::Endian");

#include "sys/CPlusPlus.h"
#if CODA_OSS_cpp17
    // Some C++17 implementations have <bit>
    #if __has_include(<bit>) // __has_include is C++17
        #include <bit>
        #undef CODA_OSS_NO_std_endian
        #define CODA_OSS_NO_std_endian 1  // don't need our own
    #endif
#endif

#ifndef CODA_OSS_NO_std_endian
    #define CODA_OSS_NO_std_endian 0  // enabled, unless explicitly disabled
#endif

#if !CODA_OSS_NO_std_endian
    namespace std // This is slightly uncouth: we're not supposed to augment "std".
    {
        using endian = ::sys::Endian;
    }
#endif  // CODA_OSS_NO_std_endian

#endif  // CODA_OSS_std_bit_INCLUDED_
