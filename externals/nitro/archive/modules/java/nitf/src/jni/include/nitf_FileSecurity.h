/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class nitf_FileSecurity */

#ifndef _Included_nitf_FileSecurity
#define _Included_nitf_FileSecurity
#ifdef __cplusplus
extern "C" {
#endif
#undef nitf_FileSecurity_INVALID_ADDRESS
#define nitf_FileSecurity_INVALID_ADDRESS 0L
/*
 * Class:     nitf_FileSecurity
 * Method:    getClassificationAuthority
 * Signature: ()Lnitf/Field;
 */
JNIEXPORT jobject JNICALL Java_nitf_FileSecurity_getClassificationAuthority
  (JNIEnv *, jobject);

/*
 * Class:     nitf_FileSecurity
 * Method:    getClassificationAuthorityType
 * Signature: ()Lnitf/Field;
 */
JNIEXPORT jobject JNICALL Java_nitf_FileSecurity_getClassificationAuthorityType
  (JNIEnv *, jobject);

/*
 * Class:     nitf_FileSecurity
 * Method:    getClassificationReason
 * Signature: ()Lnitf/Field;
 */
JNIEXPORT jobject JNICALL Java_nitf_FileSecurity_getClassificationReason
  (JNIEnv *, jobject);

/*
 * Class:     nitf_FileSecurity
 * Method:    getClassificationSystem
 * Signature: ()Lnitf/Field;
 */
JNIEXPORT jobject JNICALL Java_nitf_FileSecurity_getClassificationSystem
  (JNIEnv *, jobject);

/*
 * Class:     nitf_FileSecurity
 * Method:    getClassificationText
 * Signature: ()Lnitf/Field;
 */
JNIEXPORT jobject JNICALL Java_nitf_FileSecurity_getClassificationText
  (JNIEnv *, jobject);

/*
 * Class:     nitf_FileSecurity
 * Method:    getCodewords
 * Signature: ()Lnitf/Field;
 */
JNIEXPORT jobject JNICALL Java_nitf_FileSecurity_getCodewords
  (JNIEnv *, jobject);

/*
 * Class:     nitf_FileSecurity
 * Method:    getControlAndHandling
 * Signature: ()Lnitf/Field;
 */
JNIEXPORT jobject JNICALL Java_nitf_FileSecurity_getControlAndHandling
  (JNIEnv *, jobject);

/*
 * Class:     nitf_FileSecurity
 * Method:    getDeclassificationDate
 * Signature: ()Lnitf/Field;
 */
JNIEXPORT jobject JNICALL Java_nitf_FileSecurity_getDeclassificationDate
  (JNIEnv *, jobject);

/*
 * Class:     nitf_FileSecurity
 * Method:    getDeclassificationExemption
 * Signature: ()Lnitf/Field;
 */
JNIEXPORT jobject JNICALL Java_nitf_FileSecurity_getDeclassificationExemption
  (JNIEnv *, jobject);

/*
 * Class:     nitf_FileSecurity
 * Method:    getDeclassificationType
 * Signature: ()Lnitf/Field;
 */
JNIEXPORT jobject JNICALL Java_nitf_FileSecurity_getDeclassificationType
  (JNIEnv *, jobject);

/*
 * Class:     nitf_FileSecurity
 * Method:    getDowngrade
 * Signature: ()Lnitf/Field;
 */
JNIEXPORT jobject JNICALL Java_nitf_FileSecurity_getDowngrade
  (JNIEnv *, jobject);

/*
 * Class:     nitf_FileSecurity
 * Method:    getDowngradeDateTime
 * Signature: ()Lnitf/Field;
 */
JNIEXPORT jobject JNICALL Java_nitf_FileSecurity_getDowngradeDateTime
  (JNIEnv *, jobject);

/*
 * Class:     nitf_FileSecurity
 * Method:    getReleasingInstructions
 * Signature: ()Lnitf/Field;
 */
JNIEXPORT jobject JNICALL Java_nitf_FileSecurity_getReleasingInstructions
  (JNIEnv *, jobject);

/*
 * Class:     nitf_FileSecurity
 * Method:    getSecurityControlNumber
 * Signature: ()Lnitf/Field;
 */
JNIEXPORT jobject JNICALL Java_nitf_FileSecurity_getSecurityControlNumber
  (JNIEnv *, jobject);

/*
 * Class:     nitf_FileSecurity
 * Method:    getSecuritySourceDate
 * Signature: ()Lnitf/Field;
 */
JNIEXPORT jobject JNICALL Java_nitf_FileSecurity_getSecuritySourceDate
  (JNIEnv *, jobject);

/*
 * Class:     nitf_FileSecurity
 * Method:    resizeForVersion
 * Signature: (Lnitf/Version;)V
 */
JNIEXPORT void JNICALL Java_nitf_FileSecurity_resizeForVersion
  (JNIEnv *, jobject, jobject);

#ifdef __cplusplus
}
#endif
#endif
